$date
    Nov 16, 2020  09:16:52
$end
$version
    TOOL:	ncsim(64)	15.20-s039
$end
$timescale
    1 ps
$end

$scope module tinyriscv_soc_tb $end

$scope module tinyriscv_soc_top_0 $end

$scope module u_tinyriscv $end

$scope module u_div $end
$var parameter 32 !    STATE_IDLE  $end
$var parameter 32 "    STATE_START  $end
$var parameter 32 #    STATE_INVERT  $end
$var parameter 32 $    STATE_END  $end
$upscope $end


$scope module u_clint $end
$var parameter  4 %    STATE_IDLE  $end
$var parameter  4 &    STATE_ASSERT  $end
$var parameter  4 '    STATE_WAIT_MRET  $end
$var parameter  4 (    STATE_MRET  $end
$upscope $end


$scope module u_pmp $end
$var parameter  2 )    A0_OFF  $end
$var parameter  2 *    A1_TOR  $end
$var parameter  2 +    A2_NA4  $end
$var parameter  2 ,    A3_NAPOT  $end
$var parameter 32 -    VLEN  $end
$var parameter 32 .    PLEN  $end
$var parameter 32 /    PMP_CNT  $end
$var parameter  2 0    U_MODE  $end
$var parameter  2 1    S_MODE  $end
$var parameter  2 2    M_MODE  $end

$scope module pmp0 $end
$var parameter  2 3    A0_OFF  $end
$var parameter  2 4    A1_TOR  $end
$var parameter  2 5    A2_NA4  $end
$var parameter  2 6    A3_NAPOT  $end
$upscope $end


$scope module pmp1 $end
$var parameter  2 7    A0_OFF  $end
$var parameter  2 8    A1_TOR  $end
$var parameter  2 9    A2_NA4  $end
$var parameter  2 :    A3_NAPOT  $end
$upscope $end


$scope module pmp2 $end
$var parameter  2 ;    A0_OFF  $end
$var parameter  2 <    A1_TOR  $end
$var parameter  2 =    A2_NA4  $end
$var parameter  2 >    A3_NAPOT  $end
$upscope $end


$scope module pmp3 $end
$var parameter  2 ?    A0_OFF  $end
$var parameter  2 @    A1_TOR  $end
$var parameter  2 A    A2_NA4  $end
$var parameter  2 B    A3_NAPOT  $end
$upscope $end


$scope module pmp4 $end
$var parameter  2 C    A0_OFF  $end
$var parameter  2 D    A1_TOR  $end
$var parameter  2 E    A2_NA4  $end
$var parameter  2 F    A3_NAPOT  $end
$upscope $end


$scope module pmp5 $end
$var parameter  2 G    A0_OFF  $end
$var parameter  2 H    A1_TOR  $end
$var parameter  2 I    A2_NA4  $end
$var parameter  2 J    A3_NAPOT  $end
$upscope $end


$scope module pmp6 $end
$var parameter  2 K    A0_OFF  $end
$var parameter  2 L    A1_TOR  $end
$var parameter  2 M    A2_NA4  $end
$var parameter  2 N    A3_NAPOT  $end
$upscope $end


$scope module pmp7 $end
$var parameter  2 O    A0_OFF  $end
$var parameter  2 P    A1_TOR  $end
$var parameter  2 Q    A2_NA4  $end
$var parameter  2 R    A3_NAPOT  $end
$upscope $end


$scope module pmp8 $end
$var parameter  2 S    A0_OFF  $end
$var parameter  2 T    A1_TOR  $end
$var parameter  2 U    A2_NA4  $end
$var parameter  2 V    A3_NAPOT  $end
$upscope $end


$scope module pmp9 $end
$var parameter  2 W    A0_OFF  $end
$var parameter  2 X    A1_TOR  $end
$var parameter  2 Y    A2_NA4  $end
$var parameter  2 Z    A3_NAPOT  $end
$upscope $end


$scope module pmp10 $end
$var parameter  2 [    A0_OFF  $end
$var parameter  2 \    A1_TOR  $end
$var parameter  2 ]    A2_NA4  $end
$var parameter  2 ^    A3_NAPOT  $end
$upscope $end


$scope module pmp11 $end
$var parameter  2 _    A0_OFF  $end
$var parameter  2 `    A1_TOR  $end
$var parameter  2 a    A2_NA4  $end
$var parameter  2 b    A3_NAPOT  $end
$upscope $end


$scope module pmp12 $end
$var parameter  2 c    A0_OFF  $end
$var parameter  2 d    A1_TOR  $end
$var parameter  2 e    A2_NA4  $end
$var parameter  2 f    A3_NAPOT  $end
$upscope $end


$scope module pmp13 $end
$var parameter  2 g    A0_OFF  $end
$var parameter  2 h    A1_TOR  $end
$var parameter  2 i    A2_NA4  $end
$var parameter  2 j    A3_NAPOT  $end
$upscope $end


$scope module pmp14 $end
$var parameter  2 k    A0_OFF  $end
$var parameter  2 l    A1_TOR  $end
$var parameter  2 m    A2_NA4  $end
$var parameter  2 n    A3_NAPOT  $end
$upscope $end


$scope module pmp15 $end
$var parameter  2 o    A0_OFF  $end
$var parameter  2 p    A1_TOR  $end
$var parameter  2 q    A2_NA4  $end
$var parameter  2 r    A3_NAPOT  $end
$upscope $end

$upscope $end

$upscope $end


$scope module timer_0 $end
$var parameter  4 s    REG_CTRL  $end
$var parameter  4 t    REG_COUNT  $end
$var parameter  4 u    REG_VALUE  $end
$upscope $end


$scope module uart_tx_0 $end
$var parameter 32 v    BAUD_115200  $end
$var parameter  4 w    S_IDLE  $end
$var parameter  4 x    S_START  $end
$var parameter  4 y    S_SEND_BYTE  $end
$var parameter  4 z    S_STOP  $end
$var parameter  4 {    UART_CTRL  $end
$var parameter  4 |    UART_STATUS  $end
$var parameter  4 }    UART_BAUD  $end
$var parameter  4 ~    UART_TXDATA  $end
$upscope $end


$scope module gpio_0 $end
$var parameter  4 !!   GPIO_DATA  $end
$upscope $end


$scope module u_rib $end
$var parameter  4 "!   slave_0 [3:0] $end
$var parameter  4 #!   slave_1 [3:0] $end
$var parameter  4 $!   slave_2 [3:0] $end
$var parameter  4 %!   slave_3 [3:0] $end
$var parameter  4 &!   slave_4 [3:0] $end
$var parameter  2 '!   grant0 [1:0] $end
$var parameter  2 (!   grant1 [1:0] $end
$var parameter  2 )!   grant2 [1:0] $end
$upscope $end


$scope module u_jtag_top $end
$var parameter 32 *!   DMI_ADDR_BITS  $end
$var parameter 32 +!   DMI_DATA_BITS  $end
$var parameter 32 ,!   DMI_OP_BITS  $end
$var parameter 32 -!   DM_RESP_BITS  $end
$var parameter 32 .!   DTM_REQ_BITS  $end

$scope module u_jtag_driver $end
$var parameter  4 /!   IDCODE_VERSION  $end
$var parameter 16 0!   IDCODE_PART_NUMBER  $end
$var parameter 11 1!   IDCODE_MANUFLD  $end
$var parameter  4 2!   DTM_VERSION  $end
$var parameter 32 3!   IR_BITS  $end
$var parameter 32 4!   DMI_ADDR_BITS  $end
$var parameter 32 5!   DMI_DATA_BITS  $end
$var parameter 32 6!   DMI_OP_BITS  $end
$var parameter 32 7!   DM_RESP_BITS  $end
$var parameter 32 8!   DTM_REQ_BITS  $end
$var parameter 32 9!   SHIFT_REG_BITS  $end
$var parameter  4 :!   TEST_LOGIC_RESET  $end
$var parameter  4 ;!   RUN_TEST_IDLE  $end
$var parameter  4 <!   SELECT_DR  $end
$var parameter  4 =!   CAPTURE_DR  $end
$var parameter  4 >!   SHIFT_DR  $end
$var parameter  4 ?!   EXIT1_DR  $end
$var parameter  4 @!   PAUSE_DR  $end
$var parameter  4 A!   EXIT2_DR  $end
$var parameter  4 B!   UPDATE_DR  $end
$var parameter  4 C!   SELECT_IR  $end
$var parameter  4 D!   CAPTURE_IR  $end
$var parameter  4 E!   SHIFT_IR  $end
$var parameter  4 F!   EXIT1_IR  $end
$var parameter  4 G!   PAUSE_IR  $end
$var parameter  4 H!   EXIT2_IR  $end
$var parameter  4 I!   UPDATE_IR  $end
$var parameter  5 J!   REG_BYPASS  $end
$var parameter  5 K!   REG_IDCODE  $end
$var parameter  5 L!   REG_DMI  $end
$var parameter  5 M!   REG_DTMCS  $end
$upscope $end


$scope module u_jtag_dm $end
$var parameter 32 N!   DMI_ADDR_BITS  $end
$var parameter 32 O!   DMI_DATA_BITS  $end
$var parameter 32 P!   DMI_OP_BITS  $end
$var parameter 32 Q!   DM_RESP_BITS  $end
$var parameter 32 R!   DTM_REQ_BITS  $end
$var parameter 32 S!   SHIFT_REG_BITS  $end
$var parameter  2 T!   STATE_IDLE  $end
$var parameter  2 U!   STATE_EX  $end
$var parameter 16 V!   DCSR  $end
$var parameter  6 W!   DMSTATUS  $end
$var parameter  6 X!   DMCONTROL  $end
$var parameter  6 Y!   HARTINFO  $end
$var parameter  6 Z!   ABSTRACTCS  $end
$var parameter  6 [!   DATA0  $end
$var parameter  6 \!   SBCS  $end
$var parameter  6 ]!   SBADDRESS0  $end
$var parameter  6 ^!   SBDATA0  $end
$var parameter  6 _!   COMMAND  $end
$var parameter 16 `!   DPC  $end
$var parameter  2 a!   OP_SUCC  $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b0 a!
b11110110001 `!
b10111 _!
b111100 ^!
b111001 ]!
b111000 \!
b100 [!
b10110 Z!
b10010 Y!
b10000 X!
b10001 W!
b11110110000 V!
b1 U!
b0 T!
b101000 S!
b101000 R!
b101000 Q!
b10 P!
b100000 O!
b110 N!
b10000 M!
b10001 L!
b1 K!
b11111 J!
b1111 I!
b1110 H!
b1101 G!
b1100 F!
b1011 E!
b1010 D!
b1001 C!
b1000 B!
b111 A!
b110 @!
b101 ?!
b100 >!
b11 =!
b10 <!
b1 ;!
b0 :!
b101000 9!
b101000 8!
b101000 7!
b10 6!
b100000 5!
b110 4!
b101 3!
b1 2!
b10100110111 1!
b1110001000000000 0!
b1 /!
b101000 .!
b101000 -!
b10 ,!
b100000 +!
b110 *!
b10 )!
b1 (!
b0 '!
b100 &!
b11 %!
b10 $!
b1 #!
b0 "!
b100 !!
b1100 ~
b1000 }
b100 |
b0 {
b1000 z
b100 y
b10 x
b1 w
b110111000 v
b1000 u
b100 t
b0 s
b11 r
b10 q
b1 p
b0 o
b11 n
b10 m
b1 l
b0 k
b11 j
b10 i
b1 h
b0 g
b11 f
b10 e
b1 d
b0 c
b11 b
b10 a
b1 `
b0 _
b11 ^
b10 ]
b1 \
b0 [
b11 Z
b10 Y
b1 X
b0 W
b11 V
b10 U
b1 T
b0 S
b11 R
b10 Q
b1 P
b0 O
b11 N
b10 M
b1 L
b0 K
b11 J
b10 I
b1 H
b0 G
b11 F
b10 E
b1 D
b0 C
b11 B
b10 A
b1 @
b0 ?
b11 >
b10 =
b1 <
b0 ;
b11 :
b10 9
b1 8
b0 7
b11 6
b10 5
b1 4
b0 3
b11 2
b1 1
b0 0
b10000 /
b100001 .
b11111 -
b11 ,
b10 +
b1 *
b0 )
b1000 (
b100 '
b10 &
b1 %
b11 $
b10 #
b1 "
b0 !
$end
#3390000
